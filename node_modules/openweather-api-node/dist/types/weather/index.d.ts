import { CurrentWeather } from "openweather-api-node/dist/types/weather/current";
import { ForecastWeather } from "openweather-api-node/dist/types/weather/forecast";
import { MinutelyWeather } from "openweather-api-node/dist/types/weather/minutely";
import { HourlyWeather } from "openweather-api-node/dist/types/weather/hourly";
import { DailyWeather } from "openweather-api-node/dist/types/weather/daily";
import { HistoricalWeather } from "openweather-api-node/dist/types/weather/historical";
export * from "openweather-api-node/dist/types/weather/current";
export * from "openweather-api-node/dist/types/weather/forecast";
export * from "openweather-api-node/dist/types/weather/minutely";
export * from "openweather-api-node/dist/types/weather/hourly";
export * from "openweather-api-node/dist/types/weather/daily";
export * from "openweather-api-node/dist/types/weather/historical";
export interface Alert {
    /**
     * Name of the alert source. Please read here the full list of alert sources: https://openweathermap.org/api/one-call-api#listsource
     */
    sender_name: string;
    /**
     * Alert event name
     */
    event: string;
    /**
     * Date and time of the start of the alert, Unix, UTC
     */
    start: number;
    /**
     * Date and time of the end of the alert, Unix, UTC
     */
    end: number;
    /**
     * Description of the alert
     */
    description: string;
    /**
     * Type of severe weather
     */
    tags: string[];
}
export interface WindData {
    /**
     * Wind speed
     */
    speed: number;
    /**
     * Wind gust
     */
    gust: number | undefined;
    /**
     * Wind direction, degrees (meteorological)
     */
    deg: number;
}
export interface Icon {
    url: string;
    raw: string;
}
export interface WeatherBase {
    /**
     * Geographical coordinates of the location (latitude)
     */
    lat: number;
    /**
     * Geographical coordinates of the location (longitude)
     */
    lon: number;
    /**
     * Date and time, UTC
     */
    dt: Date;
    /**
     * Date and time, Unix, UTC
     */
    dtRaw: number;
    /**
     * Timezone name for the requested location
     */
    timezone: string | undefined;
    /**
     * Date and time, Unix, UTC
     */
    timezoneOffset: number;
}
export type Weather = WeatherBase & CurrentWeather & ForecastWeather & MinutelyWeather & HourlyWeather & DailyWeather & HistoricalWeather;
export interface Everything {
    lat: number;
    lon: number;
    timezone: string;
    timezoneOffset: number;
    current: CurrentWeather;
    minutely: MinutelyWeather[];
    hourly: HourlyWeather[];
    daily: DailyWeather[];
    alerts: Alert[];
}
